import React, { useState } from 'react';
import { useSwipeable } from 'react-swipeable'; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ useSwipeable
import './details.css';

function Details() {
  const images = [
    "https://img2.pic.in.th/pic/C14EEE1A-1C6E-4778-85B7-4833D53D43EB.jpeg",
    "https://img5.pic.in.th/file/secure-sv1/618E6171-BADE-42BC-A018-2EA60935F70F.jpeg",
    "https://img5.pic.in.th/file/secure-sv1/IMG_448429fe121e41b2f430.jpeg",
    "https://img5.pic.in.th/file/secure-sv1/IMG_64786800a538a371f8ae.jpeg",
    "https://img2.pic.in.th/pic/IMG_18254b9a0e0ef262515a.jpeg",
    "https://img2.pic.in.th/pic/IMG_750821c6a0b5848c84f8.jpeg",
    "https://img2.pic.in.th/pic/IMG_217360495c125ab56c81.jpeg",
    "https://img5.pic.in.th/file/secure-sv1/IMG_79057ffcc3e4b6cb96bc.jpeg",
    "https://img2.pic.in.th/pic/IMG_7834161695a4292d3799.jpeg",
    "https://img5.pic.in.th/file/secure-sv1/IMG_7833a600a5964cb97987.jpeg",
    "https://img5.pic.in.th/file/secure-sv1/IMG_7669dbd275c5d25b60ea.jpeg",
    "https://img2.pic.in.th/pic/IMG_791818c257fcaec84a84.jpeg"
  ];

  const [currentIndex, setCurrentIndex] = useState(0);

  const handlers = useSwipeable({
    onSwipedLeft: () => handleNext(),
    onSwipedRight: () => handlePrev(),
    preventDefaultTouchmoveEvent: true,
    trackMouse: true
  });

  const handleNext = () => {
    setCurrentIndex((currentIndex + 1) % images.length);
  };

  const handlePrev = () => {
    setCurrentIndex((currentIndex - 1 + images.length) % images.length);
  };

  return (
    <div className="details-page" style={{ overflowY: 'auto', maxHeight: '100vh', padding: '20px' }}>
      <div className="header-text" style={{ textAlign: 'center' }}>
        <h1>HAPPY <br /> NAME DAY</h1>
      </div>

      <div className="card-stack" {...handlers} style={{ position: 'relative', height: '350px', marginBottom: '20px' }}>
        {images.map((src, index) => {
          const zIndex = images.length - Math.abs(currentIndex - index);
          const rotation = (index - currentIndex) * 1; // ‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏∏‡∏ô‡∏†‡∏≤‡∏û
          const offset = (index - currentIndex) * 0; // ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô

          return (
            <img
              key={index}
              src={src}
              alt={`Slide ${index + 1}`}
              className="card"
              style={{
                zIndex: zIndex,
                position: 'absolute',
                left: '50%',
                top: '50%',
                transform: `translate(-50%, -50%) rotate(${rotation}deg)`,
                marginTop: `${offset}px`,
                width: '250px',
                height: '350px',
                borderRadius: '8px',
                boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',
              }}
            />
          );
        })}
      </div>

      <div className="controls" style={{ textAlign: 'center', marginTop: '0px' }}>
        <button onClick={handlePrev} style={{ margin: '0 10px', padding: '10px 20px' }}>
          &lt;
        </button>
        <button onClick={handleNext} style={{ margin: '0 10px', padding: '10px 20px' }}>
          &gt;
        </button>
      </div>
      <div
        className="card-message"
        style={{
          margin: '10%',
          width: '100%',
          maxWidth: '250px',
          padding: '20px',
          borderRadius: '8px',
          backgroundColor: '#fff',
          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',
          textAlign: 'center',
          fontSize: '16px',
          lineHeight: '1.5',
        }}
      >
        <div className="text-box">
  <p>‡∏™‡∏∏‡∏Ç‡∏™‡∏±‡∏ô‡∏ï‡πå‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡∏ô‡∏∞‡∏û‡∏µ‡πà‡πÄ‡∏ô‡∏°‚≠êÔ∏èüíñ</p>

  <p>
    ‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏Ç‡∏≠‡∏á‡πÄ‡∏ò‡∏≠‡∏õ‡∏µ‡∏ô‡∏µ‡πâ ‡∏≠‡∏¢‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏´‡∏ô‡∏π‡∏î‡∏µ‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡πÜ ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏°‡∏µ‡πÄ‡∏ò‡∏≠‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡πâ‡∏≤‡∏á‡πÜ 
    ‡πÄ‡∏ò‡∏≠‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡∏π‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏£‡∏≠‡∏¢‡∏¢‡∏¥‡πâ‡∏°
  </p>

  <p>
    ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏õ‡∏µ‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ò‡∏≠ ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á ‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÄ‡∏ö‡∏¥‡∏Å‡∏ö‡∏≤‡∏ô 
    ‡∏°‡∏µ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏¢‡∏≠‡∏∞‡πÜ ‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡πÜ ‡∏ß‡∏±‡∏ô‡∏ô‡∏∞ ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ù‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏ò‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏£‡∏¥‡∏á 
    ‡πÅ‡∏•‡∏∞‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏ò‡∏≠‡∏ó‡∏≥‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏ò‡∏≠‡∏õ‡∏£‡∏≤‡∏£‡∏ñ‡∏ô‡∏≤
  </p>

  <p>
    ‡∏£‡∏±‡∏Å‡πÄ‡∏ò‡∏≠‡∏°‡∏≤‡∏Å‡πÜ‡∏ô‡∏∞ ‡πÅ‡∏•‡∏∞‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏Ç‡πâ‡∏≤‡∏á‡πÄ‡∏ò‡∏≠‡πÄ‡∏™‡∏°‡∏≠ ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡πÄ‡∏ò‡∏≠‡∏à‡∏∞‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡∏≠‡∏∞‡πÑ‡∏£ 
    ‡∏´‡∏ô‡∏π‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏ò‡∏≠‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏î‡∏µüëçüèª ‡∏Ç‡∏≠‡πÅ‡∏Ñ‡πà‡πÑ‡∏°‡πà‡∏î‡∏∑‡πâ‡∏≠‡∏Å‡πá‡∏û‡∏≠üòå ‡∏≠‡∏¢‡πà‡∏≤‡∏Å‡∏ß‡∏ô‡πÄ‡∏¢‡∏≠‡∏∞‡∏î‡πâ‡∏ß‡∏¢
  </p>

  <p>
    ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏ò‡∏≠ ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏ò‡∏≠‡∏°‡∏µ‡πÅ‡∏ï‡πà‡∏£‡∏≠‡∏¢‡∏¢‡∏¥‡πâ‡∏°‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç ‡∏´‡∏ô‡∏π‡∏£‡∏±‡∏Å‡∏û‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏ô‡πâ‡∏≤‡∏≤üíñ 
    ‡∏™‡∏∏‡∏Ç‡∏™‡∏±‡∏ô‡∏ï‡πå‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡∏ô‡∏∞‡∏Ñ‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏Ç‡∏≠‡∏á‡∏ô‡πâ‡∏≠‡∏á!üòò
  </p>
</div>

      </div>


      <audio autoPlay loop>
        <source src="https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3" type="audio/mp3" />
        Your browser does not support the audio element.
      </audio>
    </div>
  );
}

export default Details;
